Terminals which are not used

   ARRAY
   THEN
   CONTINUE
   BREAK
   PRINT


Rules never reduced

   13 fdecl: /* empty */


State 2 conflicts: 6 shift/reduce
State 88 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declare_statements EOF

    2 typ: VOID
    3    | INT
    4    | STRING
    5    | BOOL
    6    | STRUCT ID

    7 make_arrayL: /* empty */
    8            | LCURLY args RCURLY

    9 declare_statements: /* empty */
   10                   | declare_statements vdecl
   11                   | declare_statements fdecl
   12                   | declare_statements sdecl

   13 fdecl: /* empty */
   14      | typ ID LPAREN formals_opt RPAREN LCURLY vdecl_list stmt_list RCURLY

   15 formals_opt: /* empty */
   16            | formal_list

   17 formal_list: typ ID
   18            | formal_list COMMA typ ID

   19 vdecl_list: /* empty */
   20           | vdecl_list vdecl

   21 vdecl: typ ID ASSIGN expr SEMICOLON

   22 sdecl_list: /* empty */
   23           | sdecl_list sdecl

   24 sdecl: STRUCT ID LCURLY sdecl_list RCURLY SEMICOLON

   25 stmt_list: /* empty */
   26          | stmt_list stmt

   27 stmt: expr SEMICOLON
   28     | RETURN expr_opt SEMICOLON
   29     | LCURLY stmt_list RCURLY
   30     | IF LPAREN expr RPAREN stmt
   31     | IF LPAREN expr RPAREN stmt ELSE stmt
   32     | FOR LPAREN expr_opt SEMICOLON expr SEMICOLON expr_opt RPAREN stmt
   33     | WHILE LPAREN expr RPAREN stmt

   34 expr_opt: /* empty */
   35         | expr

   36 expr: INTL
   37     | ID
   38     | BOOLL
   39     | expr PLUS expr
   40     | expr MINUS expr
   41     | expr TIMES expr
   42     | expr DIVIDE expr
   43     | expr MODULO expr
   44     | MINUS expr
   45     | expr COMPEQUAL expr
   46     | expr COMPNOTEQUAL expr
   47     | expr LESSTHAN expr
   48     | expr GREATERTHAN expr
   49     | expr GTEQT expr
   50     | expr LTEQT expr
   51     | expr UNION expr
   52     | expr INTERSECTION expr
   53     | LPAREN expr RPAREN
   54     | ID DECREMENT expr
   55     | ID INCREMENT expr
   56     | expr LPAREN expr RPAREN
   57     | expr AND expr
   58     | expr OR expr
   59     | NEGATE expr
   60     | STRUCT ID
   61     | typ LBRACK expr RBRACK make_arrayL

   62 args: expr
   63     | args COMMA expr


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 3
STRING (259) 4
BOOL (260) 5
VOID (261) 2
ARRAY (262)
STRUCT (263) 6 24 60
PLUS (264) 39
MINUS (265) 40 44
TIMES (266) 41
DIVIDE (267) 42
MODULO (268) 43
COMPEQUAL (269) 45
COMPNOTEQUAL (270) 46
LESSTHAN (271) 47
GREATERTHAN (272) 48
GTEQT (273) 49
LTEQT (274) 50
UNION (275) 51
INTERSECTION (276) 52
IF (277) 30 31
THEN (278)
ELSE (279) 31
FOR (280) 32
WHILE (281) 33
CONTINUE (282)
BREAK (283)
SEMICOLON (284) 21 24 27 28 32
RETURN (285) 28
EOF (286) 1
LPAREN (287) 14 30 31 32 33 53 56
RPAREN (288) 14 30 31 32 33 53 56
LCURLY (289) 8 14 24 29
RCURLY (290) 8 14 24 29
LBRACK (291) 61
RBRACK (292) 61
ASSIGN (293) 21
INCREMENT (294) 55
DECREMENT (295) 54
AND (296) 57
OR (297) 58
NEGATE (298) 59
PRINT (299)
COMMA (300) 18 63
INTL (301) 36
ID (302) 6 14 17 18 21 24 37 54 55 60
BOOLL (303) 38
NOELSE (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
typ (52)
    on left: 2 3 4 5 6, on right: 14 17 18 21 61
make_arrayL (53)
    on left: 7 8, on right: 61
declare_statements (54)
    on left: 9 10 11 12, on right: 1 10 11 12
fdecl (55)
    on left: 13 14, on right: 11
formals_opt (56)
    on left: 15 16, on right: 14
formal_list (57)
    on left: 17 18, on right: 16 18
vdecl_list (58)
    on left: 19 20, on right: 14 20
vdecl (59)
    on left: 21, on right: 10 20
sdecl_list (60)
    on left: 22 23, on right: 23 24
sdecl (61)
    on left: 24, on right: 12 23
stmt_list (62)
    on left: 25 26, on right: 14 26 29
stmt (63)
    on left: 27 28 29 30 31 32 33, on right: 26 30 31 32 33
expr_opt (64)
    on left: 34 35, on right: 28 32
expr (65)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 56 57 58 59 60 61, on right: 21 27 30 31 32 33 35 39 40 41
    42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 61 62 63
args (66)
    on left: 62 63, on right: 8 63


state 0

    0 $accept: . program $end

    $default  reduce using rule 9 (declare_statements)

    program             go to state 1
    declare_statements  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: declare_statements . EOF
   10 declare_statements: declare_statements . vdecl
   11                   | declare_statements . fdecl
   12                   | declare_statements . sdecl

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 8
    EOF     shift, and go to state 9

    INT     [reduce using rule 13 (fdecl)]
    STRING  [reduce using rule 13 (fdecl)]
    BOOL    [reduce using rule 13 (fdecl)]
    VOID    [reduce using rule 13 (fdecl)]
    STRUCT  [reduce using rule 13 (fdecl)]
    EOF     [reduce using rule 13 (fdecl)]

    typ    go to state 10
    fdecl  go to state 11
    vdecl  go to state 12
    sdecl  go to state 13


state 3

    0 $accept: program $end .

    $default  accept


state 4

    3 typ: INT .

    $default  reduce using rule 3 (typ)


state 5

    4 typ: STRING .

    $default  reduce using rule 4 (typ)


state 6

    5 typ: BOOL .

    $default  reduce using rule 5 (typ)


state 7

    2 typ: VOID .

    $default  reduce using rule 2 (typ)


state 8

    6 typ: STRUCT . ID
   24 sdecl: STRUCT . ID LCURLY sdecl_list RCURLY SEMICOLON

    ID  shift, and go to state 14


state 9

    1 program: declare_statements EOF .

    $default  reduce using rule 1 (program)


state 10

   14 fdecl: typ . ID LPAREN formals_opt RPAREN LCURLY vdecl_list stmt_list RCURLY
   21 vdecl: typ . ID ASSIGN expr SEMICOLON

    ID  shift, and go to state 15


state 11

   11 declare_statements: declare_statements fdecl .

    $default  reduce using rule 11 (declare_statements)


state 12

   10 declare_statements: declare_statements vdecl .

    $default  reduce using rule 10 (declare_statements)


state 13

   12 declare_statements: declare_statements sdecl .

    $default  reduce using rule 12 (declare_statements)


state 14

    6 typ: STRUCT ID .
   24 sdecl: STRUCT ID . LCURLY sdecl_list RCURLY SEMICOLON

    LCURLY  shift, and go to state 16

    $default  reduce using rule 6 (typ)


state 15

   14 fdecl: typ ID . LPAREN formals_opt RPAREN LCURLY vdecl_list stmt_list RCURLY
   21 vdecl: typ ID . ASSIGN expr SEMICOLON

    LPAREN  shift, and go to state 17
    ASSIGN  shift, and go to state 18


state 16

   24 sdecl: STRUCT ID LCURLY . sdecl_list RCURLY SEMICOLON

    $default  reduce using rule 22 (sdecl_list)

    sdecl_list  go to state 19


state 17

   14 fdecl: typ ID LPAREN . formals_opt RPAREN LCURLY vdecl_list stmt_list RCURLY

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 20

    $default  reduce using rule 15 (formals_opt)

    typ          go to state 21
    formals_opt  go to state 22
    formal_list  go to state 23


state 18

   21 vdecl: typ ID ASSIGN . expr SEMICOLON

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 32


state 19

   23 sdecl_list: sdecl_list . sdecl
   24 sdecl: STRUCT ID LCURLY sdecl_list . RCURLY SEMICOLON

    STRUCT  shift, and go to state 33
    RCURLY  shift, and go to state 34

    sdecl  go to state 35


state 20

    6 typ: STRUCT . ID

    ID  shift, and go to state 36


state 21

   17 formal_list: typ . ID

    ID  shift, and go to state 37


state 22

   14 fdecl: typ ID LPAREN formals_opt . RPAREN LCURLY vdecl_list stmt_list RCURLY

    RPAREN  shift, and go to state 38


state 23

   16 formals_opt: formal_list .
   18 formal_list: formal_list . COMMA typ ID

    COMMA  shift, and go to state 39

    $default  reduce using rule 16 (formals_opt)


state 24

    6 typ: STRUCT . ID
   60 expr: STRUCT . ID

    ID  shift, and go to state 40


state 25

   44 expr: MINUS . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 41


state 26

   53 expr: LPAREN . expr RPAREN

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 42


state 27

   59 expr: NEGATE . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 43


state 28

   36 expr: INTL .

    $default  reduce using rule 36 (expr)


state 29

   37 expr: ID .
   54     | ID . DECREMENT expr
   55     | ID . INCREMENT expr

    INCREMENT  shift, and go to state 44
    DECREMENT  shift, and go to state 45

    $default  reduce using rule 37 (expr)


state 30

   38 expr: BOOLL .

    $default  reduce using rule 38 (expr)


state 31

   61 expr: typ . LBRACK expr RBRACK make_arrayL

    LBRACK  shift, and go to state 46


state 32

   21 vdecl: typ ID ASSIGN expr . SEMICOLON
   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    SEMICOLON     shift, and go to state 60
    LPAREN        shift, and go to state 61
    AND           shift, and go to state 62
    OR            shift, and go to state 63


state 33

   24 sdecl: STRUCT . ID LCURLY sdecl_list RCURLY SEMICOLON

    ID  shift, and go to state 64


state 34

   24 sdecl: STRUCT ID LCURLY sdecl_list RCURLY . SEMICOLON

    SEMICOLON  shift, and go to state 65


state 35

   23 sdecl_list: sdecl_list sdecl .

    $default  reduce using rule 23 (sdecl_list)


state 36

    6 typ: STRUCT ID .

    $default  reduce using rule 6 (typ)


state 37

   17 formal_list: typ ID .

    $default  reduce using rule 17 (formal_list)


state 38

   14 fdecl: typ ID LPAREN formals_opt RPAREN . LCURLY vdecl_list stmt_list RCURLY

    LCURLY  shift, and go to state 66


state 39

   18 formal_list: formal_list COMMA . typ ID

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 20

    typ  go to state 67


state 40

    6 typ: STRUCT ID .
   60 expr: STRUCT ID .

    LBRACK    reduce using rule 6 (typ)
    $default  reduce using rule 60 (expr)


state 41

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   44     | MINUS expr .
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 44 (expr)


state 42

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   53     | LPAREN expr . RPAREN
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    RPAREN        shift, and go to state 68
    AND           shift, and go to state 62
    OR            shift, and go to state 63


state 43

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr
   59     | NEGATE expr .

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 59 (expr)


state 44

   55 expr: ID INCREMENT . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 69


state 45

   54 expr: ID DECREMENT . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 70


state 46

   61 expr: typ LBRACK . expr RBRACK make_arrayL

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 71


state 47

   39 expr: expr PLUS . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 72


state 48

   40 expr: expr MINUS . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 73


state 49

   41 expr: expr TIMES . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 74


state 50

   42 expr: expr DIVIDE . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 75


state 51

   43 expr: expr MODULO . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 76


state 52

   45 expr: expr COMPEQUAL . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 77


state 53

   46 expr: expr COMPNOTEQUAL . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 78


state 54

   47 expr: expr LESSTHAN . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 79


state 55

   48 expr: expr GREATERTHAN . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 80


state 56

   49 expr: expr GTEQT . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 81


state 57

   50 expr: expr LTEQT . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 82


state 58

   51 expr: expr UNION . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 83


state 59

   52 expr: expr INTERSECTION . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 84


state 60

   21 vdecl: typ ID ASSIGN expr SEMICOLON .

    $default  reduce using rule 21 (vdecl)


state 61

   56 expr: expr LPAREN . expr RPAREN

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 85


state 62

   57 expr: expr AND . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 86


state 63

   58 expr: expr OR . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 87


state 64

   24 sdecl: STRUCT ID . LCURLY sdecl_list RCURLY SEMICOLON

    LCURLY  shift, and go to state 16


state 65

   24 sdecl: STRUCT ID LCURLY sdecl_list RCURLY SEMICOLON .

    $default  reduce using rule 24 (sdecl)


state 66

   14 fdecl: typ ID LPAREN formals_opt RPAREN LCURLY . vdecl_list stmt_list RCURLY

    $default  reduce using rule 19 (vdecl_list)

    vdecl_list  go to state 88


state 67

   18 formal_list: formal_list COMMA typ . ID

    ID  shift, and go to state 89


state 68

   53 expr: LPAREN expr RPAREN .

    $default  reduce using rule 53 (expr)


state 69

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   55     | ID INCREMENT expr .
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    AND           shift, and go to state 62
    OR            shift, and go to state 63

    $default  reduce using rule 55 (expr)


state 70

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   54     | ID DECREMENT expr .
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    AND           shift, and go to state 62
    OR            shift, and go to state 63

    $default  reduce using rule 54 (expr)


state 71

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr
   61     | typ LBRACK expr . RBRACK make_arrayL

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    RBRACK        shift, and go to state 90
    AND           shift, and go to state 62
    OR            shift, and go to state 63


state 72

   39 expr: expr . PLUS expr
   39     | expr PLUS expr .
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 39 (expr)


state 73

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   40     | expr MINUS expr .
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 40 (expr)


state 74

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   41     | expr TIMES expr .
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 41 (expr)


state 75

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   42     | expr DIVIDE expr .
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 42 (expr)


state 76

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   43     | expr MODULO expr .
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 43 (expr)


state 77

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   45     | expr COMPEQUAL expr .
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 45 (expr)


state 78

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   46     | expr COMPNOTEQUAL expr .
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 46 (expr)


state 79

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   47     | expr LESSTHAN expr .
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 47 (expr)


state 80

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   48     | expr GREATERTHAN expr .
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 48 (expr)


state 81

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   49     | expr GTEQT expr .
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 49 (expr)


state 82

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   50     | expr LTEQT expr .
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 50 (expr)


state 83

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   51     | expr UNION expr .
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    LPAREN  shift, and go to state 61

    $default  reduce using rule 51 (expr)


state 84

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   52     | expr INTERSECTION expr .
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    LPAREN  shift, and go to state 61

    $default  reduce using rule 52 (expr)


state 85

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   56     | expr LPAREN expr . RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    RPAREN        shift, and go to state 91
    AND           shift, and go to state 62
    OR            shift, and go to state 63


state 86

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   57     | expr AND expr .
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61

    $default  reduce using rule 57 (expr)


state 87

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr
   58     | expr OR expr .

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    AND           shift, and go to state 62

    $default  reduce using rule 58 (expr)


state 88

   14 fdecl: typ ID LPAREN formals_opt RPAREN LCURLY vdecl_list . stmt_list RCURLY
   20 vdecl_list: vdecl_list . vdecl

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 20

    INT       [reduce using rule 25 (stmt_list)]
    STRING    [reduce using rule 25 (stmt_list)]
    BOOL      [reduce using rule 25 (stmt_list)]
    VOID      [reduce using rule 25 (stmt_list)]
    STRUCT    [reduce using rule 25 (stmt_list)]
    $default  reduce using rule 25 (stmt_list)

    typ        go to state 92
    vdecl      go to state 93
    stmt_list  go to state 94


state 89

   18 formal_list: formal_list COMMA typ ID .

    $default  reduce using rule 18 (formal_list)


state 90

   61 expr: typ LBRACK expr RBRACK . make_arrayL

    LCURLY  shift, and go to state 95

    $default  reduce using rule 7 (make_arrayL)

    make_arrayL  go to state 96


state 91

   56 expr: expr LPAREN expr RPAREN .

    $default  reduce using rule 56 (expr)


state 92

   21 vdecl: typ . ID ASSIGN expr SEMICOLON

    ID  shift, and go to state 97


state 93

   20 vdecl_list: vdecl_list vdecl .

    $default  reduce using rule 20 (vdecl_list)


state 94

   14 fdecl: typ ID LPAREN formals_opt RPAREN LCURLY vdecl_list stmt_list . RCURLY
   26 stmt_list: stmt_list . stmt

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    IF      shift, and go to state 98
    FOR     shift, and go to state 99
    WHILE   shift, and go to state 100
    RETURN  shift, and go to state 101
    LPAREN  shift, and go to state 26
    LCURLY  shift, and go to state 102
    RCURLY  shift, and go to state 103
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    stmt  go to state 104
    expr  go to state 105


state 95

    8 make_arrayL: LCURLY . args RCURLY

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 106
    args  go to state 107


state 96

   61 expr: typ LBRACK expr RBRACK make_arrayL .

    $default  reduce using rule 61 (expr)


state 97

   21 vdecl: typ ID . ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 18


state 98

   30 stmt: IF . LPAREN expr RPAREN stmt
   31     | IF . LPAREN expr RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 108


state 99

   32 stmt: FOR . LPAREN expr_opt SEMICOLON expr SEMICOLON expr_opt RPAREN stmt

    LPAREN  shift, and go to state 109


state 100

   33 stmt: WHILE . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 110


state 101

   28 stmt: RETURN . expr_opt SEMICOLON

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    $default  reduce using rule 34 (expr_opt)

    typ       go to state 31
    expr_opt  go to state 111
    expr      go to state 112


state 102

   29 stmt: LCURLY . stmt_list RCURLY

    $default  reduce using rule 25 (stmt_list)

    stmt_list  go to state 113


state 103

   14 fdecl: typ ID LPAREN formals_opt RPAREN LCURLY vdecl_list stmt_list RCURLY .

    $default  reduce using rule 14 (fdecl)


state 104

   26 stmt_list: stmt_list stmt .

    $default  reduce using rule 26 (stmt_list)


state 105

   27 stmt: expr . SEMICOLON
   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    SEMICOLON     shift, and go to state 114
    LPAREN        shift, and go to state 61
    AND           shift, and go to state 62
    OR            shift, and go to state 63


state 106

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr
   62 args: expr .

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    AND           shift, and go to state 62
    OR            shift, and go to state 63

    $default  reduce using rule 62 (args)


state 107

    8 make_arrayL: LCURLY args . RCURLY
   63 args: args . COMMA expr

    RCURLY  shift, and go to state 115
    COMMA   shift, and go to state 116


state 108

   30 stmt: IF LPAREN . expr RPAREN stmt
   31     | IF LPAREN . expr RPAREN stmt ELSE stmt

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 117


state 109

   32 stmt: FOR LPAREN . expr_opt SEMICOLON expr SEMICOLON expr_opt RPAREN stmt

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    $default  reduce using rule 34 (expr_opt)

    typ       go to state 31
    expr_opt  go to state 118
    expr      go to state 112


state 110

   33 stmt: WHILE LPAREN . expr RPAREN stmt

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 119


state 111

   28 stmt: RETURN expr_opt . SEMICOLON

    SEMICOLON  shift, and go to state 120


state 112

   35 expr_opt: expr .
   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    AND           shift, and go to state 62
    OR            shift, and go to state 63

    $default  reduce using rule 35 (expr_opt)


state 113

   26 stmt_list: stmt_list . stmt
   29 stmt: LCURLY stmt_list . RCURLY

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    IF      shift, and go to state 98
    FOR     shift, and go to state 99
    WHILE   shift, and go to state 100
    RETURN  shift, and go to state 101
    LPAREN  shift, and go to state 26
    LCURLY  shift, and go to state 102
    RCURLY  shift, and go to state 121
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    stmt  go to state 104
    expr  go to state 105


state 114

   27 stmt: expr SEMICOLON .

    $default  reduce using rule 27 (stmt)


state 115

    8 make_arrayL: LCURLY args RCURLY .

    $default  reduce using rule 8 (make_arrayL)


state 116

   63 args: args COMMA . expr

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 122


state 117

   30 stmt: IF LPAREN expr . RPAREN stmt
   31     | IF LPAREN expr . RPAREN stmt ELSE stmt
   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    RPAREN        shift, and go to state 123
    AND           shift, and go to state 62
    OR            shift, and go to state 63


state 118

   32 stmt: FOR LPAREN expr_opt . SEMICOLON expr SEMICOLON expr_opt RPAREN stmt

    SEMICOLON  shift, and go to state 124


state 119

   33 stmt: WHILE LPAREN expr . RPAREN stmt
   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    RPAREN        shift, and go to state 125
    AND           shift, and go to state 62
    OR            shift, and go to state 63


state 120

   28 stmt: RETURN expr_opt SEMICOLON .

    $default  reduce using rule 28 (stmt)


state 121

   29 stmt: LCURLY stmt_list RCURLY .

    $default  reduce using rule 29 (stmt)


state 122

   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr
   63 args: args COMMA expr .

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    LPAREN        shift, and go to state 61
    AND           shift, and go to state 62
    OR            shift, and go to state 63

    $default  reduce using rule 63 (args)


state 123

   30 stmt: IF LPAREN expr RPAREN . stmt
   31     | IF LPAREN expr RPAREN . stmt ELSE stmt

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    IF      shift, and go to state 98
    FOR     shift, and go to state 99
    WHILE   shift, and go to state 100
    RETURN  shift, and go to state 101
    LPAREN  shift, and go to state 26
    LCURLY  shift, and go to state 102
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    stmt  go to state 126
    expr  go to state 105


state 124

   32 stmt: FOR LPAREN expr_opt SEMICOLON . expr SEMICOLON expr_opt RPAREN stmt

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    expr  go to state 127


state 125

   33 stmt: WHILE LPAREN expr RPAREN . stmt

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    IF      shift, and go to state 98
    FOR     shift, and go to state 99
    WHILE   shift, and go to state 100
    RETURN  shift, and go to state 101
    LPAREN  shift, and go to state 26
    LCURLY  shift, and go to state 102
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    stmt  go to state 128
    expr  go to state 105


state 126

   30 stmt: IF LPAREN expr RPAREN stmt .
   31     | IF LPAREN expr RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 129

    $default  reduce using rule 30 (stmt)


state 127

   32 stmt: FOR LPAREN expr_opt SEMICOLON expr . SEMICOLON expr_opt RPAREN stmt
   39 expr: expr . PLUS expr
   40     | expr . MINUS expr
   41     | expr . TIMES expr
   42     | expr . DIVIDE expr
   43     | expr . MODULO expr
   45     | expr . COMPEQUAL expr
   46     | expr . COMPNOTEQUAL expr
   47     | expr . LESSTHAN expr
   48     | expr . GREATERTHAN expr
   49     | expr . GTEQT expr
   50     | expr . LTEQT expr
   51     | expr . UNION expr
   52     | expr . INTERSECTION expr
   56     | expr . LPAREN expr RPAREN
   57     | expr . AND expr
   58     | expr . OR expr

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    TIMES         shift, and go to state 49
    DIVIDE        shift, and go to state 50
    MODULO        shift, and go to state 51
    COMPEQUAL     shift, and go to state 52
    COMPNOTEQUAL  shift, and go to state 53
    LESSTHAN      shift, and go to state 54
    GREATERTHAN   shift, and go to state 55
    GTEQT         shift, and go to state 56
    LTEQT         shift, and go to state 57
    UNION         shift, and go to state 58
    INTERSECTION  shift, and go to state 59
    SEMICOLON     shift, and go to state 130
    LPAREN        shift, and go to state 61
    AND           shift, and go to state 62
    OR            shift, and go to state 63


state 128

   33 stmt: WHILE LPAREN expr RPAREN stmt .

    $default  reduce using rule 33 (stmt)


state 129

   31 stmt: IF LPAREN expr RPAREN stmt ELSE . stmt

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    IF      shift, and go to state 98
    FOR     shift, and go to state 99
    WHILE   shift, and go to state 100
    RETURN  shift, and go to state 101
    LPAREN  shift, and go to state 26
    LCURLY  shift, and go to state 102
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    stmt  go to state 131
    expr  go to state 105


state 130

   32 stmt: FOR LPAREN expr_opt SEMICOLON expr SEMICOLON . expr_opt RPAREN stmt

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    LPAREN  shift, and go to state 26
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    $default  reduce using rule 34 (expr_opt)

    typ       go to state 31
    expr_opt  go to state 132
    expr      go to state 112


state 131

   31 stmt: IF LPAREN expr RPAREN stmt ELSE stmt .

    $default  reduce using rule 31 (stmt)


state 132

   32 stmt: FOR LPAREN expr_opt SEMICOLON expr SEMICOLON expr_opt . RPAREN stmt

    RPAREN  shift, and go to state 133


state 133

   32 stmt: FOR LPAREN expr_opt SEMICOLON expr SEMICOLON expr_opt RPAREN . stmt

    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    STRUCT  shift, and go to state 24
    MINUS   shift, and go to state 25
    IF      shift, and go to state 98
    FOR     shift, and go to state 99
    WHILE   shift, and go to state 100
    RETURN  shift, and go to state 101
    LPAREN  shift, and go to state 26
    LCURLY  shift, and go to state 102
    NEGATE  shift, and go to state 27
    INTL    shift, and go to state 28
    ID      shift, and go to state 29
    BOOLL   shift, and go to state 30

    typ   go to state 31
    stmt  go to state 134
    expr  go to state 105


state 134

   32 stmt: FOR LPAREN expr_opt SEMICOLON expr SEMICOLON expr_opt RPAREN stmt .

    $default  reduce using rule 32 (stmt)
